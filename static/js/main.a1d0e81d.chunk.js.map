{"version":3,"sources":["index.js"],"names":["Joke","props","state","isLoaded","items","error","counter","this","slice","key","fetch","then","res","json","result","setState","updateJoke","joke","content","map","item","index","SimpleCard","setup","punchline","id","isFirst","message","onClick","clickHandler","variant","color","href","React","Component","className","component","ReactDOM","render","document","getElementById"],"mappings":"0PASMA,E,kDACJ,WAAYC,GAAO,IAAD,8BAChB,cAAMA,IACDC,MAAQ,CACXC,UAAS,EACTC,MAAM,GACNC,MAAM,KACNC,QAAQ,GANM,E,8CASlB,WAAa,IAAD,OACJF,EAAQG,KAAKL,MAAME,MAAMI,QACzBC,EAAMF,KAAKL,MAAMI,QACvBI,MAAM,kEACHC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MACC,SAACG,GACCA,EAAO,GAAGL,IAAMA,EAChB,EAAKM,SAAS,CACZZ,UAAU,EACVC,MAAM,CAAEU,EAAO,IAAV,mBAAgBV,IACrBE,QAAQG,EAAI,OAGhB,SAACJ,GACC,EAAKU,SAAS,CACZZ,UAAU,EACVE,MAAOA,S,+BAMjB,WACEE,KAAKS,e,0BAGP,WACuBT,KAAKL,MAAlBC,WAENI,KAAKQ,SAAS,CACZZ,UAAS,EACTE,MAAM,OAERE,KAAKS,gB,oBAIT,WAAS,IACHC,EADE,SAEmBV,KAAKL,MAAvBG,EAFD,EAECA,MAAMF,EAFP,EAEOA,SAIPe,EAHMX,KAAKL,MAAME,MAAMI,QAGPW,KAAK,SAACC,EAAKC,GAC/B,OACE,cAACC,EAAD,CACEC,MAAOH,EAAKG,MACZC,UAAWJ,EAAKI,UAChBC,GAAIL,EAAKK,GACTC,QAAmB,IAAVL,GACJD,EAAKX,QAiBhB,OAVEQ,EADCZ,EACM,yCAAYA,EAAMsB,WAGvB,gCACE,6BAAMxB,EAA0B,GAAf,eAChBe,KAML,gCACE,cAAC,IAAD,IACA,sDACA,cAAC,IAAD,CACEU,QAAS,kBAAM,EAAKC,gBACpBC,QAAQ,YAAYC,MAAM,UAF5B,kBAICd,EACD,mBAAGe,KAAK,+CAAR,kE,GAvFWC,IAAMC,WA6FzB,SAASZ,EAAWrB,GAElB,OACE,cAAC,IAAD,CAAMkC,UAAU,YAAhB,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAYL,QAAQ,KAAKM,UAAU,KAAnC,SACGnC,EAAMsB,QAET,eAAC,IAAD,CAAYY,UAAU,WAAWJ,MAAM,gBAAvC,eACK9B,EAAMwB,MAEX,eAAC,IAAD,CAAYK,QAAQ,OAAOM,UAAU,KAArC,UACGnC,EAAMuB,UACP,+BAOVa,IAASC,OACP,cAACtC,EAAD,IACAuC,SAASC,eAAe,U","file":"static/js/main.a1d0e81d.chunk.js","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\n\nclass Joke extends React.Component{\n  constructor(props){\n    super(props)\n    this.state = {\n      isLoaded:false,\n      items:[],\n      error:null,\n      counter:0,\n    }\n  }\n  updateJoke(){\n    const items = this.state.items.slice();\n    const key = this.state.counter;\n    fetch(\"https://official-joke-api.appspot.com/jokes/programming/random\")\n      .then(res => res.json())\n      .then(\n        (result) => {\n          result[0].key = key\n          this.setState({\n            isLoaded: true,\n            items: [result[0],...items],\n            counter:key+1,\n          });\n        },\n        (error) => {\n          this.setState({\n            isLoaded: true,\n            error: error,\n          })\n        }\n      )\n  }\n\n  componentDidMount(){\n    this.updateJoke();\n  }\n\n  clickHandler (){\n    const { isLoaded } = this.state;\n    if(isLoaded){\n      this.setState({\n        isLoaded:false,\n        error:null,\n      })\n      this.updateJoke()\n    }\n  }\n  \n  render(){\n    let joke;\n    const {error,isLoaded} = this.state;\n    let items = this.state.items.slice();\n    //items.reverse();\n\n    const content = items.map(((item,index) => {\n      return(\n        <SimpleCard\n          setup={item.setup}\n          punchline={item.punchline}\n          id={item.id}\n          isFirst={index === 0}\n          key={item.key}\n        />\n      )\n    }));\n    \n\n    if(error){\n      joke = <h1>Error: {error.message}</h1>;\n    }else{\n      joke = (\n        <div>\n          <h2>{!isLoaded ? \"Loading...\" : \"\"}</h2>\n          {content}\n        </div>\n      );\n    }\n\n    return(\n      <div>\n        <CssBaseline/>\n        <h1>Random Official Joke</h1>\n        <Button \n          onClick={() => this.clickHandler()}\n          variant=\"contained\" color=\"primary\"\n        >Next</Button>\n        {joke}\n        <a href=\"https://github.com/15Dkatz/official_joke_api\">15Dkatz/official_joke_api: Official Joke API!</a>\n      </div>\n    );\n  }\n}\n\nfunction SimpleCard(props){\n\n  return(\n    <Card className=\"card-root\">\n      <CardContent>\n        <Typography variant=\"h5\" component=\"h2\">\n          {props.setup}\n        </Typography>\n        <Typography className=\"card-pos\" color=\"textSecondary\">\n          id{props.id}\n        </Typography>\n        <Typography variant=\"body\" component=\"h2\">\n          {props.punchline}\n          <br />\n        </Typography>\n      </CardContent>\n    </Card>\n  );\n}\n\nReactDOM.render(\n  <Joke />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}